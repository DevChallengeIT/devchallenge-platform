<div class="bg-white border my-3 shadow-sm rounded-md p-4 md:p-5 dark:bg-gray-800 dark:border-gray-700 dark:shadow-slate-700/[.7] mb-3">
  <div class="flex justify-between">
    <h1 class="<%= UI::H1 %> mb-5">
      <%= link_to challenge.title, challenge_path(challenge), class: UI::LINK %> / <%= task.title %>
      <% if Auth.admin?(current_user) %>
        <%= link_to t('words.edit'), edit_admin_challenge_task_path(challenge, task), class: UI::LINK %>
      <% end %>
    </h1>

    <%= link_to t('words.back'), challenge_path(challenge), class: UI::BUTTON_SECONDARY %>
  </div>

  <div class="my-5 flex space-x-5 justify-between">
    <div class="bg-gray-100 rounded-md text-gray-700 p-5 w-full">
      <h4 class="<%= UI::H3 %>"><%= t('words.start') %></h4>
      <%= render(UI::TimestampComponent.new(data: task.start_at)) %>
      <% if task.start_at.future? %>
        <%= render(UI::CountdownTimerComponent.new(id: "#{task.id}-start-at", countdown_ts: task.start_at)) %>
      <% end %>
    </div>
    
    <div class="bg-gray-100 rounded-md text-gray-700 p-5 w-full">
      <h4 class="<%= UI::H3 %>"><%= t('words.submit') %></h4>
      <%= render(UI::TimestampComponent.new(data: task.submit_at)) %>
      <% if task.submit_at.future? %>
        <%= render(UI::CountdownTimerComponent.new(id: "#{task.id}-submit-at", countdown_ts: task.submit_at)) %>
      <% end %>
    </div>

    <div class="bg-gray-100 rounded-md text-gray-700 p-5 w-full">
      <h4 class="<%= UI::H3 %>"><%= t('words.result') %></h4>
      <%= render(UI::TimestampComponent.new(data: task.result_at)) %>
      <% if task.result_at.future? %>
        <%= render(UI::CountdownTimerComponent.new(id: "#{task.id}-result-at", countdown_ts: task.result_at)) %>
      <% end %>
    </div>
  </div>

  <% if @result.nil? && task_submission.persisted? %>
    <div id="result" class="my-5">
      <p class="<%= UI::FLASH_NOTICE %>">
        <%= t('messages.task_result_pending') %>
      </p>
    </div>
  <% end %>

  <% if @result && (Time.zone.now > task.result_at || task.show_instant_result?) %>
    <div id="result" class="my-5">
      <h2 class="<%= UI::H2 %>">
        <%= t('words.result') %>:
        <%= @result %>
      </h2>

      <% if task.dependency %>
        <% if @result >= (task.dependency.min_assessment || 0) %>
          <%= t('messages.you_qualified_to') %>:
          <%= link_to task.dependency.title, task_path(task.dependency), class: UI::LINK %>
        <% else %>
          <span class="font-semibold text-gray-800">
            <%= t('messages.you_not_qualified_to') %>: <%= task.dependency.title %>
          </span>
        <% end %>
      <% end %>
    </div>
  <% end %>

  <div class="my-8 text-gray-800 dark:text-gray-400">
    <% if Time.zone.now > task.start_at %>
      <h2 class="<%= UI::H2 %> mb-3">
        <%= t('words.description') %>
      </h2>
      <%= task.description %>
    <% else %>
      <p class="<%= UI::FLASH_NOTICE %>">
        <%= t('messages.task_description_will_be') %> <%= render(UI::TimestampComponent.new(data: task.start_at)) %>
      </p>
    <% end %>
  </div>

  <% if Time.zone.now < task.result_at && task.task_assessments.any? %>
    <p class="<%= UI::FLASH_NOTICE %>">
      <%= t('messages.submission_has_already_been_assessed') %> <%= render(UI::TimestampComponent.new(data: task.result_at)) %>
    </p>
  <% end %>

  <% if !task.task_assessments.any? %>
    <% if (task.start_at..task.submit_at).cover?(Time.zone.now) %>
      <div class="my-8">
        <h2 class="<%= UI::H2 %>">
          <%= t('words.submit') %>
        </h2>
        <%= form_with(model: task_submission, scope: :task_submission, url: (task_submission.new_record? ? task_submissions_path(task) : submission_path(task_submission)), method: (task_submission.new_record? ? :post : :put), class: "contents") do |form| %>
          <div class="flex my-5 items-center justify-between space-x-5">
            <div class="w-full">
              <%= form.label :notes, class: UI::FORM_LABEL %>
              <%= form.text_area :notes, autofocus: true, class: UI::FORM_INPUT %>
              <%= render(UI::ErrorTagComponent.new(errors: task_submission.errors, field: :notes)) %>
            </div>

            <% if task.require_attachment? %>
              <div class="w-full">
                <%= form.label :zip_file, class: UI::FORM_LABEL %>
                <%= form.file_field :zip_file, autofocus: true, class: UI::FORM_INPUT %>
                <%= render(UI::ErrorTagComponent.new(errors: task_submission.errors, field: :zip_file)) %>
              </div>
            <% end %>
          </div>

          <%= form.submit task_submission.new_record? ? t('words.submit') : t('words.update'), class: UI::BUTTON_PRIMARY %>
        <% end %>
        
        <% unless task.task_assessments.any? %>
          <div class="flex items-center justify-between mb-24">
            <div class="mt-8 font-semibold">
              <% unless task_submission.new_record? %>
                <%= t('messages.remove_my_submission') %>
                <%= button_to t('words.remove'), submission_path(task_submission), method: :delete, class: UI::BUTTON_DANGER, form: {data: {turbo_confirm: t('messages.are_you_sure')}} %>
              <% end %>
            </div>
          </div>
          <% end %>
      <% else %>
        <p class="<%= UI::FLASH_NOTICE %>">
          <%= t('messages.submission_is_not_available') %>
        </p>
      <% end %>
    <% end %>

    <% if current_member&.judge? %>
      <%= render('ui/tasks/assesments') %>
    <% end %>
  </div>
</div>


