<%= task.title %>
<%= task.description %>

Start at: <%= render(UI::TimestampComponent.new(data: task.start_at)) %>
Submit at: <%= render(UI::TimestampComponent.new(data: task.submit_at)) %>
Result at: <%= render(UI::TimestampComponent.new(data: task.result_at)) %>


<ul id="assessments">
  <% if task_submission.zip_file.present? %>
    <%= link_to "Zip file", rails_blob_path(task_submission.zip_file, disposition: 'attachment'), class: UI::BUTTON_SECONDARY %>
  <% end %>

  <%= form_with(model: task_submission, scope: :task_assessments, url: assessment_path(task_submission:), method: :put, class: "contents") do |form| %>
    <div class="flex my-5 items-center space-x-5">
      <div class="">
        <%= form.fields_for :task_assessments do |task_assessment| %>
          <div class="flex my-5 items-center justify-between space-x-5">
            <div class="w-full">
              <%= task_assessment.object.task_criterium.title %>
              <%= task_assessment.hidden_field :id, class: UI::FORM_LABEL %>
            </div>

            <div class="w-full">
              <%= task_assessment.label :value, class: UI::FORM_LABEL %>
              <%= task_assessment.number_field :value, autofocus: true, class: UI::FORM_INPUT %>
              <%= render(UI::ErrorTagComponent.new(errors: task_submission.errors, field: :value)) %>
            </div>
          </div>
        <% end %>
      </div>

      <div>
        <%= form.label :notes, class: UI::FORM_LABEL %>
        <%= form.text_field :notes, autofocus: true, class: UI::FORM_INPUT %>
        <%= render(UI::ErrorTagComponent.new(errors: task_submission.errors, field: :notes)) %>
      </div>
    </div>

    <div class="flex items-center justify-between">
      <%= form.submit t('words.update'), class: UI::BUTTON_PRIMARY %>
      <%= link_to t('words.back'), task_path(task), class: UI::BUTTON_SECONDARY %>
    </div>
  <% end %>
</ul>
